{
  "version": 3,
  "sources": ["../lib/weight.json", "../lib/root.json", "../lib/apnorm.js", "../lib/prange_v_inf.js", "../lib/f26.js", "../lib/gausslegdquad.js", "../lib/main.js", "../lib/factory.js", "../lib/index.js"],
  "sourcesContent": ["[\n\t0.0176140071391521,\n\t0.0406014298003869,\n\t0.0626720483341091,\n\t0.0832767415767048,\n\t0.10193011981724,\n\t0.118194531961518,\n\t0.131688638449177,\n\t0.142096109318382,\n\t0.149172986472604,\n\t0.152753387130726,\n\t0.152753387130726,\n\t0.149172986472604,\n\t0.142096109318382,\n\t0.131688638449177,\n\t0.118194531961518,\n\t0.10193011981724,\n\t0.0832767415767048,\n\t0.0626720483341091,\n\t0.0406014298003869,\n\t0.0176140071391521\n]\n", "[\n\t0.993128599185095,\n\t0.963971927277914,\n\t0.912234428251326,\n\t0.839116971822219,\n\t0.746331906460151,\n\t0.636053680726515,\n\t0.510867001950827,\n\t0.37370608871542,\n\t0.227785851141645,\n\t0.0765265211334973,\n\t-0.0765265211334973,\n\t-0.227785851141645,\n\t-0.37370608871542,\n\t-0.510867001950827,\n\t-0.636053680726515,\n\t-0.746331906460151,\n\t-0.839116971822219,\n\t-0.912234428251326,\n\t-0.963971927277914,\n\t-0.993128599185095\n]\n", "/* eslint-disable max-len, no-mixed-operators */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar exp = require( '@stdlib/math-base-special-exp' );\nvar SQRT_TWO_PI = require( '@stdlib/constants-float64-sqrt-two-pi' );\n\n\n// VARIABLES //\n\nvar CUTOFF = 7.071; // 10 / sqrt(2)\nvar p0 = 220.2068679123761e0;\nvar p1 = 221.2135961699311e0;\nvar p2 = 112.0792914978709e0;\nvar p3 = 33.91286607838300e0;\nvar p4 = 6.373962203531650e0;\nvar p5 = 0.7003830644436881e0;\nvar p6 = 0.3526249659989109e-01;\nvar q0 = 440.4137358247522e0;\nvar q1 = 793.8265125199484e0;\nvar q2 = 637.3336333788311e0;\nvar q3 = 296.5642487796737e0;\nvar q4 = 86.78073220294608e0;\nvar q5 = 16.06417757920695e0;\nvar q6 = 1.755667163182642e0;\nvar q7 = 0.8838834764831844e-1;\n\n\n// MAIN //\n\n/**\n* Evaluates the CDF of the standard normal distribution.\n*\n* @private\n* @param {number} z - standard deviation from the mean\n* @returns {number} evaluated CDF\n*/\nfunction apnorm( z ) {\n\tvar expntl;\n\tvar zabs;\n\tvar pdf;\n\tvar p;\n\tvar q;\n\n\tzabs = abs( z );\n\tif ( zabs > 37.0 ) {\n\t\tif ( z > 0.0 ) {\n\t\t\tp = 1.0;\n\t\t} else {\n\t\t\tp = 0.0;\n\t\t}\n\t} else {\n\t\t// Case: |z| >= 37\n\t\texpntl = exp( -0.5 * zabs * zabs );\n\t\tpdf = expntl / SQRT_TWO_PI;\n\t\tif ( zabs < CUTOFF ) {\n\t\t\tp = expntl * ((((((p6 * zabs + p5) * zabs + p4) * zabs + p3) * zabs + p2) * zabs + p1) * zabs + p0) /\n\t\t\t\t(((((((q7 * zabs + q6) * zabs + q5) * zabs + q4) * zabs + q3) * zabs + q2) * zabs + q1) * zabs + q0);\n\t\t}\n\t\telse {\n\t\t\tp = pdf / (zabs + 1.0 / (zabs + 2.0 / (zabs + 3.0 / (zabs + 4.0 / (zabs + 0.65)))));\n\t\t}\n\t\tif ( z >= 0.0 ) {\n\t\t\tq = p;\n\t\t\tp = 1.0 - q;\n\t\t}\n\t}\n\treturn p;\n}\n\n\n// EXPORTS //\n\nmodule.exports = apnorm;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar round = require( '@stdlib/math-base-special-round' );\nvar sqrt = require( '@stdlib/math-base-special-sqrt' );\nvar exp = require( '@stdlib/math-base-special-exp' );\nvar pow = require( '@stdlib/math-base-special-pow' );\nvar ln = require( '@stdlib/math-base-special-ln' );\nvar PI = require( '@stdlib/constants-float64-pi' );\nvar apnorm = require( './apnorm.js' );\nvar WEIGHT = require( './weight.json' );\nvar ROOT = require( './root.json' );\n\n\n// FUNCTIONS //\n\n/**\n* Evaluates a Gauss-Legendre quadrature.\n*\n* @private\n* @param {number} ww - quadrature point\n* @param {number} yii - integral bound\n* @param {number} aii - integral bound\n* @param {number} bii - integral bound\n* @param {number} r - relative error tolerance\n* @returns {number} integral value\n*/\nfunction fint( ww, yii, aii, bii, r ) {\n\tvar yyi = ( ( bii - aii ) * yii ) + bii + aii;\n\tvar out = exp( -yyi * yyi * 0.125 );\n\tout *= pow( apnorm( yyi * 0.5 ) -\n\t\tapnorm( ( yyi - (2*ww) ) * 0.5 ), r - 1 );\n\treturn out;\n}\n\n/**\n* Evaluates the Gauss-Legendre quadrature rule.\n*\n* @private\n* @param {number} ww - quadrature point\n* @param {number} aii - integral bound\n* @param {number} bii - integral bound\n* @param {number} r - relative error tolerance\n* @param {number} a - lower bound of integration\n* @param {number} b - upper bound of integration\n* @param {number} n - number of quadrature points\n* @returns {number} integral value\n*/\nfunction gaussLegreQuadrature( ww, aii, bii, r, a, b, n ) {\n\tvar wsum = 0.0;\n\tvar c = ( b - a ) * 0.5;\n\tvar d = ( b + a ) * 0.5;\n\tvar j;\n\tfor ( j = 0; j < n; j++ ) {\n\t\tif ( ROOT[j] === 0.0 ) {\n\t\t\twsum += WEIGHT[j] * fint( ww, d, aii, bii, r );\n\t\t} else {\n\t\t\twsum += WEIGHT[j] * ( fint( ww, ( ROOT[j]*c ) + d, aii, bii, r ) );\n\t\t}\n\t}\n\treturn c * wsum;\n}\n\n\n// MAIN //\n\n/**\n* Evaluates `H(w)`.\n*\n* @private\n* @param {number} w - quantile of the studentized range\n* @param {number} r - sample size for range (same for each group)\n* @returns {number} evaluated function\n*/\nfunction prangeVInf( w, r ) {\n\tvar soma;\n\tvar ai;\n\tvar ii;\n\tvar bi;\n\tvar i;\n\tvar k;\n\tif ( w <= 0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( w <= 3 ) {\n\t\tk = 3.0;\n\t} else {\n\t\tk = 2.0;\n\t}\n\tai = w / 2.0;\n\tii = 1;\n\tbi = ( ( (k - ii) * (w / 2.0) ) + (8*ii) ) / k;\n\tsoma = 0;\n\tfor ( i = 1; i < round( k ) + 1; i++ ) {\n\t\tii = i;\n\t\tsoma += ((bi - ai) / 2.0) *\n\t\t\tgaussLegreQuadrature( w, ai, bi, r, -1.0, +1.0, 20 );\n\t\tai = bi;\n\t\tif ( i + 1 === round(k) ) {\n\t\t\tbi = 8;\n\t\t} else {\n\t\t\tbi = ( ( (k - ii - 1) * (w / 2.0) ) + ( 8 * (ii + 1) ) ) / k;\n\t\t}\n\t}\n\tsoma *= 2.0 * r / sqrt( 2.0 * PI );\n\tsoma += pow( exp(1), r * ln( ( 2.0 * apnorm( w / 2.0 ) ) - 1.0 ) );\n\treturn soma;\n}\n\n\n// EXPORTS //\n\nmodule.exports = prangeVInf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar lngamma = require( '@stdlib/math-base-special-gammaln' );\nvar sqrt = require( '@stdlib/math-base-special-sqrt' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar exp = require( '@stdlib/math-base-special-exp' );\nvar ln = require( '@stdlib/math-base-special-ln' );\nvar LN_TWO = require( '@stdlib/constants-float64-ln-two' );\nvar prangeVInf = require( './prange_v_inf.js' );\n\n\n// MAIN //\n\n/**\n* Evaluates a Gauss-Legendre quadrature.\n*\n* @private\n* @param {number} q - quadrature point\n* @param {number} za - integral bound\n* @param {number} aii - integral bound\n* @param {number} c - integral upper bound\n* @param {number} r - relative error tolerance\n* @param {number} v - number of integration variables\n* @param {number} l - logarithm of the absolute value of the integral\n* @returns {number} integral value\n*/\nfunction f26( q, za, aii, c, r, v, l ) {\n\tvar aux1;\n\tvar yyi;\n\tvar aux;\n\n\tyyi = ( za * l ) + ( 2.0 * aii * l ) + l;\n\taux1 = prangeVInf( sqrt(yyi / 2.0) * q, r );\n\tif ( aux1 === 0 ) {\n\t\taux1 = 1.0e-37;\n\t}\n\taux = ( c * ln(aux1) ) + ln(l) + ( (v / 2.0) * ln(v) ) +\n\t\t( -yyi * v / 4.0 ) + ( ( ( v / 2.0 ) - 1.0 ) * ln(yyi) ) -\n\t\t( ( v * LN_TWO ) + lngamma( v / 2.0 ) );\n\tif ( abs( aux ) >= 1.0e30 ) {\n\t\treturn 0.0;\n\t}\n\treturn exp( aux );\n}\n\n\n// EXPORTS //\n\nmodule.exports = f26;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar WEIGHT = require( './weight.json' );\nvar ROOT = require( './root.json' );\nvar f26 = require( './f26.js' );\n\n\n// MAIN //\n\n/**\n* Evaluates a Gauss-Legendre quadrature rule.\n*\n* @private\n* @param {number} q - quadrature point\n* @param {number} aii - integral bound\n* @param {number} r - relative error tolerance\n* @param {number} ci - integral upper bound\n* @param {number} a - lower bound of integration\n* @param {number} b - upper bound of integration\n* @param {number} n - number of quadrature points\n* @param {number} v - number of integration variables\n* @param {number} l - logarithm of the absolute value of the integral\n* @returns {number} integral value\n*/\nfunction gausslegdquad( q, aii, r, ci, a, b, n, v, l ) {\n\tvar wsum = 0.0;\n\tvar cmm = ( b - a ) / 2.0;\n\tvar d = ( b + a ) / 2.0;\n\tvar j;\n\tfor ( j = 0; j < n; j++ ) {\n\t\tif ( ROOT[ j ] === 0.0 ) {\n\t\t\twsum += WEIGHT[ j ] * f26( q, d, aii, ci, r, v, l );\n\t\t} else {\n\t\t\twsum += WEIGHT[ j ] *\n\t\t\t\t( f26( q, ( ROOT[ j ] * cmm ) + d, aii, ci, r, v, l ) );\n\t\t}\n\t}\n\treturn cmm * wsum;\n}\n\n\n// EXPORTS //\n\nmodule.exports = gausslegdquad;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar pow = require( '@stdlib/math-base-special-pow' );\nvar PINF = require( '@stdlib/constants-float64-pinf' );\nvar gausslegdquad = require( './gausslegdquad.js' );\nvar prangeVInf = require( './prange_v_inf.js' );\n\n\n// VARIABLES //\n\nvar PRECISION = 1e-10;\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) of the studentized range distribution.\n*\n* ## References\n*\n* -   Ferreira, D. F., Demetrico, C. G. B., Manly, B. F. J., and Machado, A. de A. 2007. \"Quantis da distribui\u00E7\u00E3o do m\u00E1ximo da amplitude estudentizada.\" _Rev. Mat. Est._, S\u00E3o Paulo, 25 (1): 117-135. <http://jaguar.fcav.unesp.br/RME/fasciculos/v25/v25_n1/A8_Daniel.pdf>.\n*\n* @param {number} q - quantile of the studentized range\n* @param {number} r - sample size for range (same for each group)\n* @param {number} v - degrees of freedom\n* @param {number} [nranges=1] - number of groups whose maximum range is considered\n* @returns {number} evaluated CDF\n*\n* @example\n* var y = cdf( 0.5, 3.0, 2.0 );\n* // returns ~0.0644\n*\n* @example\n* var y = cdf( 12.1, 17.0, 2.0 );\n* // returns ~0.913\n*\n* @example\n* var y = cdf( 0.5, 3.0, 2.0, 2 );\n* // returns ~0.01\n*/\nfunction cdf( q, r, v, nranges ) {\n\tvar probinic;\n\tvar auxprob;\n\tvar found;\n\tvar ll;\n\tvar a;\n\n\tif ( isnan( q ) || isnan( r ) || isnan( v ) ) {\n\t\treturn NaN;\n\t}\n\tif ( r < 2.0 || v < 2.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( nranges === void 0 ) {\n\t\tnranges = 1;\n\t}\n\telse if ( !isPositiveInteger( nranges ) ) {\n\t\treturn NaN;\n\t}\n\tif ( v === 1 ) {\n\t\tif ( r < 10 ) {\n\t\t\tll = 1.0 + ( 1.0 / ( (2.0 * r) + 3.0 ) );\n\t\t} else if ( r <= 100 ) {\n\t\t\tll = 1.0844 + ( (1.119 - 1.0844) / 90.0 * (r - 10.0) );\n\t\t} else {\n\t\t\tll = 1.119 + ( 1.0 / r );\n\t\t}\n\t}\n\telse if ( v === 2 ) {\n\t\tll = 0.968;\n\t}\n\telse if ( v <= 100 ) {\n\t\tll = 1;\n\t}\n\telse if ( v <= 800 ) {\n\t\tll = 1 / 2.0;\n\t}\n\telse if ( v <= 5000 ) {\n\t\tll = 1 / 4.0;\n\t}\n\telse {\n\t\tll = 1 / 8.0;\n\t}\n\n\tif ( q < 0.0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( q === PINF ) {\n\t\treturn 1.0;\n\t}\n\tif (\n\t\tv > 25000 ||\n\t\tgausslegdquad( q, 0, r, nranges, -1.0, 1.0, 20, v, ll ) === 0\n\t) {\n\t\treturn pow( prangeVInf( q, r ), nranges );\n\t}\n\tauxprob = 0;\n\tfound = false;\n\ta = 0;\n\tprobinic = 0;\n\twhile ( !found ) {\n\t\tauxprob += gausslegdquad( q, a, r, nranges, -1.0, +1.0, 20, v, ll );\n\t\tif ( auxprob > 1.0 ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\tif ( abs(auxprob - probinic) / auxprob <= PRECISION ) {\n\t\t\tfound = true;\n\t\t} else {\n\t\t\tprobinic = auxprob;\n\t\t}\n\t\ta += 1;\n\t}\n\treturn auxprob;\n}\n\n\n// EXPORTS //\n\nmodule.exports = cdf;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isPositiveInteger = require( '@stdlib/assert-is-positive-integer' ).isPrimitive;\nvar constantFunction = require( '@stdlib/utils-constant-function' );\nvar isnan = require( '@stdlib/math-base-assert-is-nan' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar pow = require( '@stdlib/math-base-special-pow' );\nvar PINF = require( '@stdlib/constants-float64-pinf' );\nvar gausslegdquad = require( './gausslegdquad.js' );\nvar prangeVInf = require( './prange_v_inf.js' );\n\n\n// VARIABLES //\n\nvar PRECISION = 1e-10;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a studentized range distribution.\n*\n* @param {number} r - sample size for range (same for each group)\n* @param {number} v - degrees of freedom\n* @param {number} [nranges=1] - number of groups whose maximum range is considered\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 3.0, 2.0 );\n* var y = cdf( 3.0 );\n* // returns ~0.712\n*\n* y = cdf( 1.0 );\n* // returns ~0.216\n*/\nfunction factory( r, v, nranges ) {\n\tvar ll;\n\tif ( isnan( v ) || isnan( r ) || r < 2.0 || v < 2.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( nranges === void 0 ) {\n\t\tnranges = 1;\n\t}\n\telse if ( !isPositiveInteger( nranges ) ) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( v === 1 ) {\n\t\tif ( r < 10 ) {\n\t\t\tll = 1.0 + ( 1.0 / ( (2.0 * r) + 3.0 ) );\n\t\t} else if ( r <= 100 ) {\n\t\t\tll = 1.0844 + ( (1.119 - 1.0844) / 90.0 * (r - 10.0) );\n\t\t} else {\n\t\t\tll = 1.119 + ( 1.0 / r );\n\t\t}\n\t}\n\telse if ( v === 2 ) {\n\t\tll = 0.968;\n\t}\n\telse if ( v <= 100 ) {\n\t\tll = 1;\n\t}\n\telse if ( v <= 800 ) {\n\t\tll = 1 / 2.0;\n\t}\n\telse if ( v <= 5000 ) {\n\t\tll = 1 / 4.0;\n\t}\n\telse {\n\t\tll = 1 / 8.0;\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a studentized range distribution.\n\t*\n\t* @private\n\t* @param {number} q - quantile of the studentized range\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( q ) {\n\t\tvar probinic;\n\t\tvar auxprob;\n\t\tvar found;\n\t\tvar a;\n\t\tif ( isnan( q ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( q < 0.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tif ( q === PINF ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\tif (\n\t\t\tv > 25000 ||\n\t\t\tgausslegdquad( q, 0, r, nranges, -1.0, 1.0, 20, v, ll ) === 0\n\t\t) {\n\t\t\treturn pow( prangeVInf( q, r ), nranges );\n\t\t}\n\t\tauxprob = 0;\n\t\tfound = false;\n\t\ta = 0;\n\t\tprobinic = 0;\n\t\twhile ( !found ) {\n\t\t\tauxprob += gausslegdquad( q, a, r, nranges, -1.0, +1.0, 20, v, ll );\n\t\t\tif ( auxprob > 1.0 ) {\n\t\t\t\treturn 1.0;\n\t\t\t}\n\t\t\tif ( abs(auxprob - probinic) / auxprob <= PRECISION ) {\n\t\t\t\tfound = true;\n\t\t\t} else {\n\t\t\t\tprobinic = auxprob;\n\t\t\t}\n\t\t\ta += 1;\n\t\t}\n\t\treturn auxprob;\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = factory;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Studentized range cumulative distribution function (CDF).\n*\n* @module @stdlib/stats-base-dists-studentized-range-cdf\n*\n* @example\n* var cdf = require( '@stdlib/stats-base-dists-studentized-range-cdf' );\n*\n* var y = cdf( 2.0, 0.1 );\n* // returns ~0.611\n*\n* y = cdf( 1.0, 2.0 );\n* // returns ~0.789\n*\n* y = cdf( -1.0, 4.0 );\n* // returns ~0.187\n*\n* var mycdf = cdf.factory( 3.0, 2.0 );\n* y = mycdf( 3.0 );\n* // returns ~0.712\n*\n* y = mycdf( 1.0 );\n* // returns ~0.216\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar factory = require( './factory.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_weight", "__commonJSMin", "exports", "module", "require_root", "__commonJSMin", "exports", "module", "require_apnorm", "__commonJSMin", "exports", "module", "abs", "exp", "SQRT_TWO_PI", "CUTOFF", "p0", "p1", "p2", "p3", "p4", "p5", "p6", "q0", "q1", "q2", "q3", "q4", "q5", "q6", "q7", "apnorm", "z", "expntl", "zabs", "pdf", "p", "q", "require_prange_v_inf", "__commonJSMin", "exports", "module", "round", "sqrt", "exp", "pow", "ln", "PI", "apnorm", "WEIGHT", "ROOT", "fint", "ww", "yii", "aii", "bii", "r", "yyi", "out", "gaussLegreQuadrature", "a", "b", "n", "wsum", "c", "d", "j", "prangeVInf", "w", "soma", "ai", "ii", "bi", "i", "k", "require_f26", "__commonJSMin", "exports", "module", "lngamma", "sqrt", "abs", "exp", "ln", "LN_TWO", "prangeVInf", "f26", "q", "za", "aii", "c", "r", "v", "l", "aux1", "yyi", "aux", "require_gausslegdquad", "__commonJSMin", "exports", "module", "WEIGHT", "ROOT", "f26", "gausslegdquad", "q", "aii", "ci", "a", "b", "n", "v", "l", "wsum", "cmm", "d", "j", "require_main", "__commonJSMin", "exports", "module", "isPositiveInteger", "isnan", "abs", "pow", "PINF", "gausslegdquad", "prangeVInf", "PRECISION", "cdf", "q", "r", "v", "nranges", "probinic", "auxprob", "found", "ll", "a", "require_factory", "__commonJSMin", "exports", "module", "isPositiveInteger", "constantFunction", "isnan", "abs", "pow", "PINF", "gausslegdquad", "prangeVInf", "PRECISION", "factory", "r", "v", "nranges", "ll", "cdf", "q", "probinic", "auxprob", "found", "a", "setReadOnly", "main", "factory"]
}
