{"version":3,"file":"index.mjs","sources":["../lib/apnorm.js","../lib/prange_v_inf.js","../lib/f26.js","../lib/gausslegdquad.js","../lib/main.js","../lib/factory.js","../lib/index.js"],"sourcesContent":["/* eslint-disable max-len, no-mixed-operators */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport abs from '@stdlib/math-base-special-abs' ;\nimport exp from '@stdlib/math-base-special-exp' ;\nimport SQRT_TWO_PI from '@stdlib/constants-float64-sqrt-two-pi' ;\n\n\n// VARIABLES //\n\nvar CUTOFF = 7.071; // 10 / sqrt(2)\nvar p0 = 220.2068679123761e0;\nvar p1 = 221.2135961699311e0;\nvar p2 = 112.0792914978709e0;\nvar p3 = 33.91286607838300e0;\nvar p4 = 6.373962203531650e0;\nvar p5 = 0.7003830644436881e0;\nvar p6 = 0.3526249659989109e-01;\nvar q0 = 440.4137358247522e0;\nvar q1 = 793.8265125199484e0;\nvar q2 = 637.3336333788311e0;\nvar q3 = 296.5642487796737e0;\nvar q4 = 86.78073220294608e0;\nvar q5 = 16.06417757920695e0;\nvar q6 = 1.755667163182642e0;\nvar q7 = 0.8838834764831844e-1;\n\n\n// MAIN //\n\n/**\n* Evaluates the CDF of the standard normal distribution.\n*\n* @private\n* @param {number} z - standard deviation from the mean\n* @returns {number} evaluated CDF\n*/\nfunction apnorm( z ) {\n\tvar expntl;\n\tvar zabs;\n\tvar pdf;\n\tvar p;\n\tvar q;\n\n\tzabs = abs( z );\n\tif ( zabs > 37.0 ) {\n\t\tif ( z > 0.0 ) {\n\t\t\tp = 1.0;\n\t\t} else {\n\t\t\tp = 0.0;\n\t\t}\n\t} else {\n\t\t// Case: |z| >= 37\n\t\texpntl = exp( -0.5 * zabs * zabs );\n\t\tpdf = expntl / SQRT_TWO_PI;\n\t\tif ( zabs < CUTOFF ) {\n\t\t\tp = expntl * ((((((p6 * zabs + p5) * zabs + p4) * zabs + p3) * zabs + p2) * zabs + p1) * zabs + p0) /\n\t\t\t\t(((((((q7 * zabs + q6) * zabs + q5) * zabs + q4) * zabs + q3) * zabs + q2) * zabs + q1) * zabs + q0);\n\t\t}\n\t\telse {\n\t\t\tp = pdf / (zabs + 1.0 / (zabs + 2.0 / (zabs + 3.0 / (zabs + 4.0 / (zabs + 0.65)))));\n\t\t}\n\t\tif ( z >= 0.0 ) {\n\t\t\tq = p;\n\t\t\tp = 1.0 - q;\n\t\t}\n\t}\n\treturn p;\n}\n\n\n// EXPORTS //\n\nexport default apnorm;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport round from '@stdlib/math-base-special-round' ;\nimport sqrt from '@stdlib/math-base-special-sqrt' ;\nimport exp from '@stdlib/math-base-special-exp' ;\nimport pow from '@stdlib/math-base-special-pow' ;\nimport ln from '@stdlib/math-base-special-ln' ;\nimport PI from '@stdlib/constants-float64-pi' ;\nimport apnorm from './apnorm.js' ;\nimport WEIGHT from './weight.json' ;\nimport ROOT from './root.json' ;\n\n\n// FUNCTIONS //\n\n/**\n* Evaluates a Gauss-Legendre quadrature.\n*\n* @private\n* @param {number} ww - quadrature point\n* @param {number} yii - integral bound\n* @param {number} aii - integral bound\n* @param {number} bii - integral bound\n* @param {number} r - relative error tolerance\n* @returns {number} integral value\n*/\nfunction fint( ww, yii, aii, bii, r ) {\n\tvar yyi = ( ( bii - aii ) * yii ) + bii + aii;\n\tvar out = exp( -yyi * yyi * 0.125 );\n\tout *= pow( apnorm( yyi * 0.5 ) -\n\t\tapnorm( ( yyi - (2*ww) ) * 0.5 ), r - 1 );\n\treturn out;\n}\n\n/**\n* Evaluates the Gauss-Legendre quadrature rule.\n*\n* @private\n* @param {number} ww - quadrature point\n* @param {number} aii - integral bound\n* @param {number} bii - integral bound\n* @param {number} r - relative error tolerance\n* @param {number} a - lower bound of integration\n* @param {number} b - upper bound of integration\n* @param {number} n - number of quadrature points\n* @returns {number} integral value\n*/\nfunction gaussLegreQuadrature( ww, aii, bii, r, a, b, n ) {\n\tvar wsum = 0.0;\n\tvar c = ( b - a ) * 0.5;\n\tvar d = ( b + a ) * 0.5;\n\tvar j;\n\tfor ( j = 0; j < n; j++ ) {\n\t\tif ( ROOT[j] === 0.0 ) {\n\t\t\twsum += WEIGHT[j] * fint( ww, d, aii, bii, r );\n\t\t} else {\n\t\t\twsum += WEIGHT[j] * ( fint( ww, ( ROOT[j]*c ) + d, aii, bii, r ) );\n\t\t}\n\t}\n\treturn c * wsum;\n}\n\n\n// MAIN //\n\n/**\n* Evaluates `H(w)`.\n*\n* @private\n* @param {number} w - quantile of the studentized range\n* @param {number} r - sample size for range (same for each group)\n* @returns {number} evaluated function\n*/\nfunction prangeVInf( w, r ) {\n\tvar soma;\n\tvar ai;\n\tvar ii;\n\tvar bi;\n\tvar i;\n\tvar k;\n\tif ( w <= 0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( w <= 3 ) {\n\t\tk = 3.0;\n\t} else {\n\t\tk = 2.0;\n\t}\n\tai = w / 2.0;\n\tii = 1;\n\tbi = ( ( (k - ii) * (w / 2.0) ) + (8*ii) ) / k;\n\tsoma = 0;\n\tfor ( i = 1; i < round( k ) + 1; i++ ) {\n\t\tii = i;\n\t\tsoma += ((bi - ai) / 2.0) *\n\t\t\tgaussLegreQuadrature( w, ai, bi, r, -1.0, +1.0, 20 );\n\t\tai = bi;\n\t\tif ( i + 1 === round(k) ) {\n\t\t\tbi = 8;\n\t\t} else {\n\t\t\tbi = ( ( (k - ii - 1) * (w / 2.0) ) + ( 8 * (ii + 1) ) ) / k;\n\t\t}\n\t}\n\tsoma *= 2.0 * r / sqrt( 2.0 * PI );\n\tsoma += pow( exp(1), r * ln( ( 2.0 * apnorm( w / 2.0 ) ) - 1.0 ) );\n\treturn soma;\n}\n\n\n// EXPORTS //\n\nexport default prangeVInf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport lngamma from '@stdlib/math-base-special-gammaln' ;\nimport sqrt from '@stdlib/math-base-special-sqrt' ;\nimport abs from '@stdlib/math-base-special-abs' ;\nimport exp from '@stdlib/math-base-special-exp' ;\nimport ln from '@stdlib/math-base-special-ln' ;\nimport LN_TWO from '@stdlib/constants-float64-ln-two' ;\nimport prangeVInf from './prange_v_inf.js' ;\n\n\n// MAIN //\n\n/**\n* Evaluates a Gauss-Legendre quadrature.\n*\n* @private\n* @param {number} q - quadrature point\n* @param {number} za - integral bound\n* @param {number} aii - integral bound\n* @param {number} c - integral upper bound\n* @param {number} r - relative error tolerance\n* @param {number} v - number of integration variables\n* @param {number} l - logarithm of the absolute value of the integral\n* @returns {number} integral value\n*/\nfunction f26( q, za, aii, c, r, v, l ) {\n\tvar aux1;\n\tvar yyi;\n\tvar aux;\n\n\tyyi = ( za * l ) + ( 2.0 * aii * l ) + l;\n\taux1 = prangeVInf( sqrt(yyi / 2.0) * q, r );\n\tif ( aux1 === 0 ) {\n\t\taux1 = 1.0e-37;\n\t}\n\taux = ( c * ln(aux1) ) + ln(l) + ( (v / 2.0) * ln(v) ) +\n\t\t( -yyi * v / 4.0 ) + ( ( ( v / 2.0 ) - 1.0 ) * ln(yyi) ) -\n\t\t( ( v * LN_TWO ) + lngamma( v / 2.0 ) );\n\tif ( abs( aux ) >= 1.0e30 ) {\n\t\treturn 0.0;\n\t}\n\treturn exp( aux );\n}\n\n\n// EXPORTS //\n\nexport default f26;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport WEIGHT from './weight.json' ;\nimport ROOT from './root.json' ;\nimport f26 from './f26.js' ;\n\n\n// MAIN //\n\n/**\n* Evaluates a Gauss-Legendre quadrature rule.\n*\n* @private\n* @param {number} q - quadrature point\n* @param {number} aii - integral bound\n* @param {number} r - relative error tolerance\n* @param {number} ci - integral upper bound\n* @param {number} a - lower bound of integration\n* @param {number} b - upper bound of integration\n* @param {number} n - number of quadrature points\n* @param {number} v - number of integration variables\n* @param {number} l - logarithm of the absolute value of the integral\n* @returns {number} integral value\n*/\nfunction gausslegdquad( q, aii, r, ci, a, b, n, v, l ) {\n\tvar wsum = 0.0;\n\tvar cmm = ( b - a ) / 2.0;\n\tvar d = ( b + a ) / 2.0;\n\tvar j;\n\tfor ( j = 0; j < n; j++ ) {\n\t\tif ( ROOT[ j ] === 0.0 ) {\n\t\t\twsum += WEIGHT[ j ] * f26( q, d, aii, ci, r, v, l );\n\t\t} else {\n\t\t\twsum += WEIGHT[ j ] *\n\t\t\t\t( f26( q, ( ROOT[ j ] * cmm ) + d, aii, ci, r, v, l ) );\n\t\t}\n\t}\n\treturn cmm * wsum;\n}\n\n\n// EXPORTS //\n\nexport default gausslegdquad;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer' ;\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\nimport abs from '@stdlib/math-base-special-abs' ;\nimport pow from '@stdlib/math-base-special-pow' ;\nimport PINF from '@stdlib/constants-float64-pinf' ;\nimport gausslegdquad from './gausslegdquad.js' ;\nimport prangeVInf from './prange_v_inf.js' ;\n\n\n// VARIABLES //\n\nvar PRECISION = 1e-10;\n\n\n// MAIN //\n\n/**\n* Evaluates the cumulative distribution function (CDF) of the studentized range distribution.\n*\n* ## References\n*\n* -   Ferreira, D. F., Demetrico, C. G. B., Manly, B. F. J., and Machado, A. de A. 2007. \"Quantis da distribuição do máximo da amplitude estudentizada.\" _Rev. Mat. Est._, São Paulo, 25 (1): 117-135. <http://jaguar.fcav.unesp.br/RME/fasciculos/v25/v25_n1/A8_Daniel.pdf>.\n*\n* @param {number} q - quantile of the studentized range\n* @param {number} r - sample size for range (same for each group)\n* @param {number} v - degrees of freedom\n* @param {number} [nranges=1] - number of groups whose maximum range is considered\n* @returns {number} evaluated CDF\n*\n* @example\n* var y = cdf( 0.5, 3.0, 2.0 );\n* // returns ~0.0644\n*\n* @example\n* var y = cdf( 12.1, 17.0, 2.0 );\n* // returns ~0.913\n*\n* @example\n* var y = cdf( 0.5, 3.0, 2.0, 2 );\n* // returns ~0.01\n*/\nfunction cdf( q, r, v, nranges ) {\n\tvar probinic;\n\tvar auxprob;\n\tvar found;\n\tvar ll;\n\tvar a;\n\n\tif ( isnan( q ) || isnan( r ) || isnan( v ) ) {\n\t\treturn NaN;\n\t}\n\tif ( r < 2.0 || v < 2.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( nranges === void 0 ) {\n\t\tnranges = 1;\n\t}\n\telse if ( !isPositiveInteger( nranges ) ) {\n\t\treturn NaN;\n\t}\n\tif ( v === 1 ) {\n\t\tif ( r < 10 ) {\n\t\t\tll = 1.0 + ( 1.0 / ( (2.0 * r) + 3.0 ) );\n\t\t} else if ( r <= 100 ) {\n\t\t\tll = 1.0844 + ( (1.119 - 1.0844) / 90.0 * (r - 10.0) );\n\t\t} else {\n\t\t\tll = 1.119 + ( 1.0 / r );\n\t\t}\n\t}\n\telse if ( v === 2 ) {\n\t\tll = 0.968;\n\t}\n\telse if ( v <= 100 ) {\n\t\tll = 1;\n\t}\n\telse if ( v <= 800 ) {\n\t\tll = 1 / 2.0;\n\t}\n\telse if ( v <= 5000 ) {\n\t\tll = 1 / 4.0;\n\t}\n\telse {\n\t\tll = 1 / 8.0;\n\t}\n\n\tif ( q < 0.0 ) {\n\t\treturn 0.0;\n\t}\n\tif ( q === PINF ) {\n\t\treturn 1.0;\n\t}\n\tif (\n\t\tv > 25000 ||\n\t\tgausslegdquad( q, 0, r, nranges, -1.0, 1.0, 20, v, ll ) === 0\n\t) {\n\t\treturn pow( prangeVInf( q, r ), nranges );\n\t}\n\tauxprob = 0;\n\tfound = false;\n\ta = 0;\n\tprobinic = 0;\n\twhile ( !found ) {\n\t\tauxprob += gausslegdquad( q, a, r, nranges, -1.0, +1.0, 20, v, ll );\n\t\tif ( auxprob > 1.0 ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\tif ( abs(auxprob - probinic) / auxprob <= PRECISION ) {\n\t\t\tfound = true;\n\t\t} else {\n\t\t\tprobinic = auxprob;\n\t\t}\n\t\ta += 1;\n\t}\n\treturn auxprob;\n}\n\n\n// EXPORTS //\n\nexport default cdf;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer' ;\nimport constantFunction from '@stdlib/utils-constant-function' ;\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\nimport abs from '@stdlib/math-base-special-abs' ;\nimport pow from '@stdlib/math-base-special-pow' ;\nimport PINF from '@stdlib/constants-float64-pinf' ;\nimport gausslegdquad from './gausslegdquad.js' ;\nimport prangeVInf from './prange_v_inf.js' ;\n\n\n// VARIABLES //\n\nvar PRECISION = 1e-10;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the cumulative distribution function (CDF) for a studentized range distribution.\n*\n* @param {number} r - sample size for range (same for each group)\n* @param {number} v - degrees of freedom\n* @param {number} [nranges=1] - number of groups whose maximum range is considered\n* @returns {Function} CDF\n*\n* @example\n* var cdf = factory( 3.0, 2.0 );\n* var y = cdf( 3.0 );\n* // returns ~0.712\n*\n* y = cdf( 1.0 );\n* // returns ~0.216\n*/\nfunction factory( r, v, nranges ) {\n\tvar ll;\n\tif ( isnan( v ) || isnan( r ) || r < 2.0 || v < 2.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( nranges === void 0 ) {\n\t\tnranges = 1;\n\t}\n\telse if ( !isPositiveInteger( nranges ) ) {\n\t\treturn constantFunction( NaN );\n\t}\n\tif ( v === 1 ) {\n\t\tif ( r < 10 ) {\n\t\t\tll = 1.0 + ( 1.0 / ( (2.0 * r) + 3.0 ) );\n\t\t} else if ( r <= 100 ) {\n\t\t\tll = 1.0844 + ( (1.119 - 1.0844) / 90.0 * (r - 10.0) );\n\t\t} else {\n\t\t\tll = 1.119 + ( 1.0 / r );\n\t\t}\n\t}\n\telse if ( v === 2 ) {\n\t\tll = 0.968;\n\t}\n\telse if ( v <= 100 ) {\n\t\tll = 1;\n\t}\n\telse if ( v <= 800 ) {\n\t\tll = 1 / 2.0;\n\t}\n\telse if ( v <= 5000 ) {\n\t\tll = 1 / 4.0;\n\t}\n\telse {\n\t\tll = 1 / 8.0;\n\t}\n\treturn cdf;\n\n\t/**\n\t* Evaluates the cumulative distribution function (CDF) for a studentized range distribution.\n\t*\n\t* @private\n\t* @param {number} q - quantile of the studentized range\n\t* @returns {Probability} evaluated CDF\n\t*\n\t* @example\n\t* var y = cdf( 2.0 );\n\t* // returns <number>\n\t*/\n\tfunction cdf( q ) {\n\t\tvar probinic;\n\t\tvar auxprob;\n\t\tvar found;\n\t\tvar a;\n\t\tif ( isnan( q ) ) {\n\t\t\treturn NaN;\n\t\t}\n\t\tif ( q < 0.0 ) {\n\t\t\treturn 0.0;\n\t\t}\n\t\tif ( q === PINF ) {\n\t\t\treturn 1.0;\n\t\t}\n\t\tif (\n\t\t\tv > 25000 ||\n\t\t\tgausslegdquad( q, 0, r, nranges, -1.0, 1.0, 20, v, ll ) === 0\n\t\t) {\n\t\t\treturn pow( prangeVInf( q, r ), nranges );\n\t\t}\n\t\tauxprob = 0;\n\t\tfound = false;\n\t\ta = 0;\n\t\tprobinic = 0;\n\t\twhile ( !found ) {\n\t\t\tauxprob += gausslegdquad( q, a, r, nranges, -1.0, +1.0, 20, v, ll );\n\t\t\tif ( auxprob > 1.0 ) {\n\t\t\t\treturn 1.0;\n\t\t\t}\n\t\t\tif ( abs(auxprob - probinic) / auxprob <= PRECISION ) {\n\t\t\t\tfound = true;\n\t\t\t} else {\n\t\t\t\tprobinic = auxprob;\n\t\t\t}\n\t\t\ta += 1;\n\t\t}\n\t\treturn auxprob;\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Studentized range cumulative distribution function (CDF).\n*\n* @module @stdlib/stats-base-dists-studentized-range-cdf\n*\n* @example\n* import cdf from '@stdlib/stats-base-dists-studentized-range-cdf' ;\n*\n* var y = cdf( 2.0, 0.1 );\n* // returns ~0.611\n*\n* y = cdf( 1.0, 2.0 );\n* // returns ~0.789\n*\n* y = cdf( -1.0, 4.0 );\n* // returns ~0.187\n*\n* var mycdf = cdf.factory( 3.0, 2.0 );\n* y = mycdf( 3.0 );\n* // returns ~0.712\n*\n* y = mycdf( 1.0 );\n* // returns ~0.216\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport main from './main.js' ;\nimport factory from './factory.js' ;\n\n\n// MAIN //\n\nsetReadOnly( main, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default main;\n"],"names":["apnorm","z","expntl","zabs","p","abs","exp","SQRT_TWO_PI","fint","ww","yii","aii","bii","r","yyi","out","pow","gaussLegreQuadrature","a","b","n","j","wsum","c","d","ROOT","WEIGHT","prangeVInf","w","soma","ai","ii","bi","i","k","round","sqrt","PI","ln","f26","q","za","v","l","aux1","aux","LN_TWO","lngamma","gausslegdquad","ci","cmm","cdf","nranges","probinic","auxprob","found","ll","isnan","NaN","isPositiveInteger","PINF","factory","constantFunction","setReadOnly","main"],"mappings":"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"}